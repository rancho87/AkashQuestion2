public class MyClass {
    
    
    public static void bubbleSort(int []  arr){
        
        boolean  flag= true;
        int count = 0;
        for(int i=0;i<arr.length && flag == true;i++){
            
            flag = false;
            
            for(int j=0;j<arr.length-i-1;j++){
                
                if(arr[j] > arr[j+1]){
                    int temp = arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1]= temp;
                    flag=  true;
                    
                }
               
            }
             ++count;
        }
        System.out.println(count);
    }
    
    public static void selectionSort(int[ ]  arr){
        
        int minIndex=0;
        int temp=0;
        for(int i=0;i<arr.length-1;i++){
            minIndex=i;
            for(int j=i+1;j<arr.length;j++){
                
                if(arr[j] < arr[minIndex]){
                    minIndex=j;
                }
            }
            temp= arr[i];
            arr[i] = arr[minIndex];
            arr[minIndex]= temp;
        }
    }
    
    public static void insertionSort(int[] arr){
        
        int temp=0;
        for(int i=1;i<arr.length;i++){
            int j =i-1;
            int key = arr[i];
            while(j >=0 && key < arr[j]){
                arr[j+1] = arr[j];
                j--;
            }
            arr[j+1] = key;
            
        }
        
    }
    
    
    static void merge( int [] arr, int left, int mid, int right ){
        
        	int i = left, j = mid + 1, k = 0;
        	int size = right - left + 1;
        	int [] temp = new int[ size ];
        	while( i <= mid && j <= right )
        	{
        		if( arr[ i ] < arr[ j ] )
        			temp[ k ++ ] = arr[ i ++ ];
        		else
        			temp[ k ++ ] = arr[ j ++ ];
        	}
        	while( i <= mid )
        		temp[ k ++ ] = arr[ i ++ ];
        	while( j <= right )
        		temp[ k ++ ] = arr[ j ++ ];
        
        	for( i = left, k = 0; i <= right; ++ i, ++ k  )
        		arr[ i ] = temp[ k ];
        
        	
    }
    
    
    public static void mergeSort(int [ ] arr , int left , int right){
        
		if( left < right )
	    {
        		int mid = ( left + right ) / 2;
        		mergeSort(arr, left, mid);
        		mergeSort(arr, mid + 1, right);
        		merge( arr, left, mid, right );
	    }
    }
    
    
    

    public static void quickSort(int [ ] arr , int low , int high){
        
		int i=low;
		int j=high;
		int pivot=arr[(i+j)/2];
		while(i<=j)
		{
			while(arr[i]<pivot)	
				i++;
			while(arr[j]>pivot)
				j--;
			if(i<=j)
			{
				int temp=arr[i];
				arr[i]=arr[j];
				arr[j]=temp;
				i++;
				j--;
			}
		}
		if(low<j)
			quickSort(arr,low,j);
		if(i<high)
			quickSort(arr,i,high);
    }
    
    public static void main(String args[]) {
     
     int [] arr = {10,25,50,200,400,35,5};
     
     mergeSort(arr,0,6);
     
     for(int result: arr)
        System.out.println(result);
       
    }
}
